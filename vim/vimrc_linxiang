" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2011 Apr 15
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

source $VIMRUNTIME/ftplugin/man.vim
"256 color --
let &t_Co=256
"" restore screen after quitting
set t_ti=ESC7ESC[rESC[?47h t_te=ESC[?47lESC8
if has("terminfo")
  let &t_Sf="\ESC[3%p1%dm"
  let &t_Sb="\ESC[4%p1%dm"
else
  let &t_Sf="\ESC[3%dm"
  let &t_Sb="\ESC[4%dm"
endif

filetype off                   " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" My Bundles here:
"
" original repos on github
Bundle 'tpope/vim-fugitive'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'tpope/vim-rails.git'
Bundle 'brookhong/cscope.vim.git'
Bundle 'xolox/vim-misc'
Bundle 'xolox/vim-session.git'
Bundle 'xolox/vim-easytags.git'
Bundle 'xolox/vim-shell.git'
Bundle 'w0ng/vim-hybrid'
Bundle 'majutsushi/tagbar.git'
Bundle 'mileszs/ack.vim.git'
Bundle 'altercation/vim-colors-solarized'
Bundle 'kien/ctrlp.vim.git'
Bundle 'mileszs/ack.vim'
Bundle 'kshenoy/vim-signature.git'
Bundle 'vim-scripts/DirDiff.vim.git'
Bundle 'widox/vim-buffer-explorer-plugin.git'
Bundle 'MarcWeber/vim-addon-mw-utils.git'
Bundle 'scrooloose/nerdtree.git'
Bundle 'Shougo/unite.vim.git'
Bundle 'Shougo/vimproc.vim.git'
Bundle 'tsukkee/unite-tag'
Bundle 't9md/vim-unite-ack'
Bundle 'bling/vim-airline'
Bundle 'chriskempson/base16-vim'
Bundle 'chrisbra/NrrwRgn'
" vim-scripts repos
Bundle 'L9'
Bundle 'FuzzyFinder'
" non github repos
Bundle 'git://git.wincent.com/command-t.git'
Bundle 'git://repo.or.cz/vcscommand'
" ...

filetype plugin indent on     " required!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..
set nobackup
set laststatus=2
set nu
set ts=4
set sw=4
set scrolloff=3
set foldmethod=syntax
set guifont=Ubuntu\ Mono\ 11
colorscheme hemisu
set wildmode=longest,list
set wildignore=.svn,CVS,*.swp
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
" vim bookmark
let g:vbookmark_bookmarkSaveFile = $HOME . '/.vimbookmark'
let g:ctrlp_extensions = ['buffertag', 'quickfix', 'dir',
                          \ 'undo', 'line',]
let g:ctrlp_working_path_mode = 'a'
let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp'
let g:ctrlp_max_files = 0
let g:ctrlp_max_depth=0

"disable easytags
let g:loaded_easytags = 1
" let g:loaded_vbookmark = 1
let g:vbookmark_bookmarkSaveFile = $HOME . '/.vimbookmark'
" 禁用默认的按键绑定
let g:vbookmark_disableMapping = 1
" 使用 Visual Stdio 书签的按键方式
nnoremap <silent> <leader>bt :VbookmarkToggle<CR>
nnoremap <silent> <leader>bn :VbookmarkNext<CR>
nnoremap <silent> <leader>bp :VbookmarkPrevious<CR>

let g:ackprg='ack-grep -H --nocolor --nogroup --column'
let g:session_autosave = 'no'